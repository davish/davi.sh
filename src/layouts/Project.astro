---
import Base from "./Base.astro";
import type { MarkdownLayoutProps } from "astro";
import type { ProjectType } from "src/components/resume/schemas";
import PostContent from "src/components/blog/post/PostContent.astro";
import HighlightList from "src/components/HighlightList.astro";
import type { CollectionEntry } from "astro:content";

type Props = CollectionEntry<"projects">;

const { data: frontmatter, id, render } = Astro.props;

const tags = frontmatter.tags || [];
const posts = (
  await Astro.glob<{ draft?: boolean; tags?: string[]; date: string }>(
    "../pages/blog/**/*.md"
  )
)
  .filter((p) => !p.frontmatter?.draft)
  .filter((p) => tags.some((t) => p.frontmatter.tags?.includes(t)))
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );

const { Content } = await render();
---

<Base
  path={"resume/projects/" + id}
  back="/resume"
  title={frontmatter.name}
  description={frontmatter.description}
>
  <article>
    <h1>{frontmatter.name}</h1>
    <PostContent>
      <Content />
    </PostContent>

    {
      posts.length > 0 ? (
        <>
          <h2>Related blog posts</h2>
          <HighlightList highlights={posts} />
        </>
      ) : null
    }
  </article>
</Base>

<style lang="scss">
  @import "/src/variables.scss";
  article {
    width: 95%;
    max-width: 75ch;
    padding: 20px;
    @media print {
      width: 100%;
      max-width: 100%;
    }
    // margin: 1rem 2rem;
  }
</style>
