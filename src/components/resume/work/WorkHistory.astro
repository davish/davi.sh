---
import { CollectionEntry, getCollection } from "astro:content";

import Group from "./Group.astro";

const stripUrl = (url: string) => url.replace("/resume/work/", "");
const getGroup = (url: string) => stripUrl(url).split("/")[0];

const workHistory = await getCollection("work");

let workHistoryByCompany: Record<string, CollectionEntry<"work">[]> = {};

workHistory.forEach((v) => {
  const group = getGroup(stripUrl(v.id || "")) || "";
  const l = workHistoryByCompany[group];
  if (l) {
    l.push(v);
  } else {
    workHistoryByCompany[group] = [v];
  }
});

const groups = Object.entries(workHistoryByCompany);

const lastEndDate = (f: CollectionEntry<"work">[]) =>
  f
    .map((j) => j.data.end)
    .map((e) => (e ? new Date(e) : new Date(8640000000000000)))
    .sort((a, b) => b.getTime() - a.getTime())[0] || new Date(0);

groups.sort(
  ([, a], [, b]) => lastEndDate(b).getTime() - lastEndDate(a).getTime()
);
---

<ul>
  {groups.map(([place, jobs]) => <Group title={place} jobs={jobs} />)}
</ul>

<style lang="scss">
  ul {
    @import "/src/variables.scss";
    @include sans-serif;
    font-size: 0.8em;
    padding-inline-start: 0;
    @media print {
      width: 100%;
      padding: 0;
    }
    margin-block-start: 0;
  }
</style>
