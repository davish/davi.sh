<div id="blog-post-container">
  <div id="blog-post-content">
    <slot />
  </div>
</div>

<!-- We need global styles here so that the css will
     apply to the generated markdown content inside the slot. -->
<style lang="scss" is:global>
  @import "/src/variables.scss";
  #blog-post-content {
    display: inline-block;
    line-height: 1.5rem;
    max-width: 100%;
    p {
      font-size: 13pt;
      margin-top: 1.5rem;
      margin-bottom: 0;
    }
    li {
      font-size: 13pt;
      p {
        margin-top: 0;
      }
    }
    img {
      max-width: 100%;
      border-radius: 5px;
    }
    figcaption {
      @include dimmed;
      text-align: center;
    }
    td {
      vertical-align: top;
    }
  }
  code {
    font-family: Consolas, Monaco, Andale Mono, Ubuntu Mono, monospace;
    font-display: auto;
    font-feature-settings: normal;
    background: $background-color;
    padding: 1px 6px;
    margin: 0 2px;
    border-radius: 5px;
    font-size: 0.95rem;
  }
  pre {
    background: #212020;
    padding: 20px;
    border-radius: 8px;
    font-size: 0.8rem;
    line-height: 1.25;
    overflow: auto;

    @media #{$media-size-phone} {
      white-space: pre-wrap;
      word-wrap: break-word;
    }

    code {
      background: none !important;
      color: #ccc;
      margin: 0;
      padding: 0;
      font-size: inherit;
    }
  }
</style>

<script>
  function toggleClass(elt: HTMLElement, cls: string) {
    if (elt.classList.contains(cls)) {
      elt.classList.remove(cls);
    } else {
      elt.classList.add(cls);
    }
  }

  function getParent(elt: HTMLElement, name: string) {
    let parent = elt.parentElement;
    while (parent && parent.nodeName !== name) {
      parent = parent.parentElement;
    }
    return parent;
  }

  const footnoteToggles: NodeListOf<HTMLInputElement> =
    document.querySelectorAll("input.margin-toggle");

  footnoteToggles.forEach((elt) =>
    elt.addEventListener("change", (e) => {
      if (e.target instanceof HTMLInputElement) {
        const article = getParent(e.target, "ARTICLE");
        if (article) {
          toggleClass(article, "hasFootnotes");
        }

        if (window.innerWidth < 1020) {
          return;
        }
        const checked = e.target?.checked;
        footnoteToggles.forEach((toggle) => {
          toggle.checked = checked;
        });
      }
    })
  );
</script>
