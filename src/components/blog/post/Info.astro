---
import { renderMarkdown, toReadableString } from "../../../utils";
import readingTime from "reading-time";
import type { CollectionEntry } from "astro:content";

type Props = CollectionEntry<"blog">;

const { data: frontmatter, body } = Astro.props;

// Strip out all code blocks and HTML tags from the
// compiledContent to get just the words for the reading time.
const codeRegex = /<pre\b[^<]*(?:(?!<\/pre>)<[^<]*)*<\/pre>/gi;
const tagRegex = /(<([^>]+)>)/gi;
const content = await renderMarkdown(body);
const html = content.replaceAll(codeRegex, "").replaceAll(tagRegex, "");
const articleTime = Math.round(readingTime(html).minutes);
---

<div id="info">
  <div>
    {toReadableString(new Date(frontmatter.date))}
  </div>
  <div>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="feather feather-clock"
      ><circle cx="12" cy="12" r="10"></circle><polyline
        points="12 6 12 12 16 14"></polyline>
    </svg>
    {articleTime} minute{articleTime !== 1 ? "s" : ""}
  </div>
</div>

<style lang="scss">
  @import "/src/variables.scss";
  #info {
    font-family: "Inter", sans-serif;
    display: flex;
    justify-content: space-between;
    font-size: 0.8rem;
    line-height: normal;
    @include dimmed;

    p {
      margin: 0.8em 0;
    }

    a:hover {
      border-bottom: 1px solid white;
    }

    svg {
      margin-right: 0.8em;
    }

    .tag {
      margin-right: 0.5em;

      &::before {
        content: "#";
      }
    }

    .feather {
      display: inline-block;
      vertical-align: -0.125em;
      width: 1em;
      height: 1em;
    }
  }
</style>
